import streamlit as st
import pandas as pd
import requests

st.set_page_config(page_title="Env√≠o Masivo de WhatsApp", layout="centered")
st.title("üì® Env√≠o Masivo de WhatsApp con Excel")

api_key = st.text_input("üîê Ingresa tu API Key de 360dialog", type="password")
file = st.file_uploader("üìÅ Sube tu archivo Excel", type=["xlsx"])

if file:
    df = pd.read_excel(file)
    st.success(f"Archivo cargado con {len(df)} filas.")
    df.columns = df.columns.str.strip()
    columns = df.columns.tolist()

    plantilla = st.selectbox("üß© Columna plantilla:", columns)
    telefono_col = st.selectbox("üì± Tel√©fono:", columns)
    pais_col = st.selectbox("üåé C√≥digo pa√≠s:", columns)
    param1 = st.selectbox("üî¢ Par√°metro {{1}}:", columns)
    param2 = st.selectbox("üî¢ Par√°metro {{2}} (opcional):", ["(ninguno)"] + columns)

    if st.button("üöÄ Enviar mensajes"):
        if not api_key:
            st.error("‚ö†Ô∏è Falta API Key.")
            st.stop()

        for idx, row in df.iterrows():
            raw_number = f"{str(row[pais_col])}{str(row[telefono_col])}".replace(' ', '').replace('-', '')
            name = str(row[param1])
            parameters = [{"type": "text", "text": name}]

            if param2 != "(ninguno)":
                parameters.append({"type": "text", "text": str(row[param2])})

            payload = {
                "messaging_product": "whatsapp",
                "to": raw_number,
                "type": "template",
                "template": {
                    "name": row[plantilla],
                    "language": {"code": "es_MX"},
                    "components": [ {
                        "type": "body",
                        "parameters": parameters
                    }]
                }
            }

            headers = {
                "Content-Type": "application/json",
                "D360-API-KEY": api_key
            }

            r = requests.post("https://waba-v2.360dialog.io/messages", headers=headers, json=payload)

            if r.status_code == 200:
                st.success(f"‚úÖ WhatsApp OK: {raw_number}")

                # üü¢ Reflejar en Chatwoot con contenido simulado (mensaje real como WhatsApp)
                localidad = parameters[0]['text']
                mensaje_simulado = f"""üí¨ *Mensaje masivo enviado con plantilla '{row[plantilla]}'*:

üìç Localidad: {localidad}

üìù *Texto enviado por WhatsApp:*

> Buen d√≠a, te saludamos de CHEP (Tarimas azules), es un gusto en saludarte.

Te escribo para confirmar que el d√≠a de ma√±ana tenemos programada la recolecci√≥n de tarimas en tu localidad: {localidad}.

¬øMe podr√≠as indicar cu√°ntas tarimas tienes para entregar? As√≠ podremos coordinar la unidad."""

                chatwoot_payload = {
                    "phone": raw_number,
                    "name": name,
                    "content": mensaje_simulado
                }

                try:
                    cw = requests.post("https://webhook-chatwoot.onrender.com/send-chatwoot-message", json=chatwoot_payload)
                    if cw.status_code == 200:
                        st.info(f"üì• Reflejado en Chatwoot: {raw_number}")
                    else:
                        st.warning(f"‚ö†Ô∏è Error al reflejar en Chatwoot ({raw_number}): {cw.text}")
                except Exception as e:
                    st.error(f"‚ùå Error en la petici√≥n a Chatwoot: {e}")

            else:
                st.error(f"‚ùå WhatsApp error ({raw_number}): {r.text}")
